<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="css/bootstrap.css">
    <meta charset="UTF-8">
    <title>FlightChain</title>
    <script src="js/jquery.min.js"></script>
    <script src="js/bootstrap.js"></script>
    <script src="js/popper.min.js"></script>
</head>
<body>

<a href="/logout">Log out</a>
<h1>FlightChain(tm)</h1>
<h2>Welcome <%=userAddress%></h2>
<br />
<div class="panel-group" role="tablist" aria-multiselectable="true" id="methods">
<% Object.values(contracts).forEach( (contract) => { %>
    <%- include('contract', {name: contract.name, methods: contract.ABI}); %>
<% }); %>
</div>

<br>
</body>
<script src="https://cdn.jsdelivr.net/npm/web3@1.2.6/dist/web3.min.js"></script>
<script>

    const web3 = new Web3('http://localhost:8545');

    let callerAddr;

    function structVals (comps, prefix) {
        let inputs = [];
        comps.forEach( comp => {
            if ('components' in comp){
                inputs.push(structVals(comp.components, prefix+comp.name+"_"));
            } else {
                inputs.push(document.getElementById(prefix+"_"+comp.name).value);
            }
        } );
        return inputs;
    }



    function callMethod(cname, method){
        let contract = contracts[cname];
        let abi = contract.ABI;
        let addr = contract.address;
        let args = [];
        let contr = new web3.eth.Contract(abi, addr);
        let meth = abi.find(e => e.name === method);
        if (meth.inputs.find(e => 'components' in e)){
            args = structVals(meth.inputs, cname+"_"+method+"_");
            console.log(args);
        } else {
            meth.inputs.forEach(i => args.push(document.getElementById(method + "_" + i.name).value));
        }
        if (abi.find(e => e.name === method).stateMutability === "view"){
            contr.methods[method].apply(null, args).call().then(Result => {
                console.log("OUT_"+method+"_"+Result.name);
                console.log(Result);
                document.getElementById("OUT_"+method+"_"+cname).innerHTML = Result});
        } else {
            contr.methods[method].apply(null, args).send({from: callerAddr, gasPrice: 1});
        }
    }

    $('.callMethod').submit(function(event) {
        let objData = {
            name: $(this).attr("id").substring(5), //Erase 'call_' prefix of ID
            data: $(this).serializeArray()
        };
        console.log(objData);
        $.post('/callMethod', objData,
            function(res) {
                let localID = event.target.id;
                console.log(res);
                document.getElementById((localID+"_out").substring(5)).innerText = res; //Erase 'call_' prefix of ID
            }
        );
        return false;
    });

</script>
</html>